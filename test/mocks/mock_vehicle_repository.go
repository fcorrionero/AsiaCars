// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fcorrionero/europcar/domain (interfaces: VehicleRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	domain "github.com/fcorrionero/europcar/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockVehicleRepository is a mock of VehicleRepository interface.
type MockVehicleRepository struct {
	ctrl     *gomock.Controller
	recorder *MockVehicleRepositoryMockRecorder
}

// MockVehicleRepositoryMockRecorder is the mock recorder for MockVehicleRepository.
type MockVehicleRepositoryMockRecorder struct {
	mock *MockVehicleRepository
}

// NewMockVehicleRepository creates a new mock instance.
func NewMockVehicleRepository(ctrl *gomock.Controller) *MockVehicleRepository {
	mock := &MockVehicleRepository{ctrl: ctrl}
	mock.recorder = &MockVehicleRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVehicleRepository) EXPECT() *MockVehicleRepositoryMockRecorder {
	return m.recorder
}

// FindByChassisNumber mocks base method.
func (m *MockVehicleRepository) FindByChassisNumber(arg0 string) (*domain.Vehicle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByChassisNumber", arg0)
	ret0, _ := ret[0].(*domain.Vehicle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByChassisNumber indicates an expected call of FindByChassisNumber.
func (mr *MockVehicleRepositoryMockRecorder) FindByChassisNumber(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByChassisNumber", reflect.TypeOf((*MockVehicleRepository)(nil).FindByChassisNumber), arg0)
}

// FindByDeviceSerialNumber mocks base method.
func (m *MockVehicleRepository) FindByDeviceSerialNumber(arg0 string) (*domain.Vehicle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByDeviceSerialNumber", arg0)
	ret0, _ := ret[0].(*domain.Vehicle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByDeviceSerialNumber indicates an expected call of FindByDeviceSerialNumber.
func (mr *MockVehicleRepositoryMockRecorder) FindByDeviceSerialNumber(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByDeviceSerialNumber", reflect.TypeOf((*MockVehicleRepository)(nil).FindByDeviceSerialNumber), arg0)
}

// Save mocks base method.
func (m *MockVehicleRepository) Save(arg0 *domain.Vehicle) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockVehicleRepositoryMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockVehicleRepository)(nil).Save), arg0)
}
